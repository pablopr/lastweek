# The default directory provider
hibernate.search.default.directory_provider = org.hibernate.search.store.FSDirectoryProvider
hibernate.search.default.indexBase = C:/Temp/HS

# Analyzer used to index documents (this analyzer is shared between the index and search processes and
#it must be done this way)
hibernate.search.analyzer = com.marc.lastweek.business.util.lucene.analyzer.spanish.SpanishAnalyzer
#hibernate.search.analyzer = org.apache.lucene.analysis.standard.StandardAnalyzer

# Set to "manual" if you don't want documents being indexed automatically, otherwise, "event" is the 
#correct value
hibernate.search.indexing_strategy = event


##########################################################################################################
# OPTIMIZATION
##########################################################################################################


##########################################################
# Worker Configuration. Synchronous/Asynchronous execution
##########################################################

# Set to "async" to execute operations in the index asynchronously. Otherwise, the value should be "sync"
#(the preferred one if there are no performance problems)
org.hibernate.worker.execution = sync

# If asynchronous behavior, set the number of threads in the pool. Otherwise, the property is not used.
org.hibernate.worker.thread_pool.size = 1

# If using asynchronous execution, configure the number of queued operations. Otherwise, the
#property is not used. 
# If the maximum is reached, operations will be executed in the main thread instead of a different one. 
org.hibernate.worker.buffer_queue.max = 1

# Maximum number of elements indexed before flushing the transaction-bound queue
org.hibernate.worker.batch_size = 10


######################
# Reader Configuration
######################

# Whether the index reader will be shared or not. "shared" is preferred. 
#The other valid value is "not-shared" 
hibernate.search.reader.strategy = shared


##################################
# Index Optimization Configuration
##################################

# Index optimization parameters used when updating the database
# How often segment indices are merged when insertion occurs. 
# Set small values to use less RAM is while indexing, and to search on 
#unoptimized indices faster (though indexing slower). 
hibernate.search.default.transaction.merge_factor = 50
# Maximun number of documents in a segment
hibernate.search.default.transaction.max_merge_docs = 20
# Documents buffered in memory during indexing (the bigger the more RAM is consumed)
hibernate.search.default.transaction.max_buffered_docs = 10

# Index optimization parameters used when indexing manually
# How often index segments are merged
hibernate.search.default.batch.merge_factor = 100
# Max number of documents in a segment
hibernate.search.default.batch.max_merge_docs = 20
# Documents buffered in memory (the bigger it is, the more amount of RAM is consumed)
hibernate.search.default.batch.max_buffered_docs = 10


# Index optimization. If not provided, no automatic optimization will be executed
# Optimize the index after max insert/update operations have been executed
hibernate.search.default.optimizer.operation_limit.max = 10
# Optimize after max transactions have been executed
hibernate.search.default.optimizer.transaction_limit.max = 10





