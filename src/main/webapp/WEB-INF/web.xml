<?xml version="1.0" encoding="UTF-8"?>
<web-app id="person" version="2.4"
    xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">


    <display-name>octipussyr</display-name>

    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>

    <!-- ******************************************************************* -->
    <!--  The "openSessionInView" filter allows hibernate sessions to be     -->
    <!--  opened when the request starts and closed when it ends, thus       -->
    <!--  allowing view artifacts to traverse lazy relations on business     -->
    <!--  objects.                                                           -->
    <!-- ******************************************************************* -->
    <filter>
        <filter-name>openSessionInView-VDP</filter-name>
        <filter-class>
            org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
        </filter-class>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>


    <filter-mapping>
        <filter-name>openSessionInView-VDP</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
 

    <!-- ******************************************************************* -->
    <!--  Wicket filter. It is important that this filter is declared after -->
    <!--  the OpenSessionInView one, so that the latter executes first, and -->
    <!--  opens the Hibernate session that both the wicket page (and the    -->
    <!--  business layer need.                                              -->
    <!-- ******************************************************************* -->
    <filter>
        <filter-name>octopussy</filter-name>
        <filter-class>
            org.apache.wicket.protocol.http.WicketFilter
        </filter-class>
        <init-param>
            <param-name>applicationFactoryClassName</param-name>
            <param-value>
                org.apache.wicket.spring.SpringWebApplicationFactory
            </param-value>
        </init-param>
        <init-param>
            <param-name>configuration</param-name>
            <param-value>deployment</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>octopussy</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



    <!-- ******************* -->
    <!-- Context Parameters  -->
    <!-- ******************* -->

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>octopussy.root</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4j.properties</param-value>
    </context-param>
    
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/classes/spring.xml,
            /WEB-INF/classes/spring-sch.xml
        </param-value>
    </context-param>


    <!-- ******************* -->
    <!-- Listeners           -->
    <!-- ******************* -->

    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>

    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

</web-app>
